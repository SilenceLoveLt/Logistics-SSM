<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yyk.dao.SysLoginMapper" >
  <resultMap id="BaseResultMap" type="com.yyk.entity.SysLogin" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="LOGIN_ID" property="loginId" jdbcType="VARCHAR" />
    <result column="LOGIN_PASSWORD" property="loginPassword" jdbcType="VARCHAR" />
    <result column="LOGIN_NAME" property="loginName" jdbcType="VARCHAR" />
    <result column="ROLEID" property="roleid" jdbcType="INTEGER" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="DATE" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="DATE" />
  </resultMap>
  
  <resultMap id="BaseResultMapNew" type="com.yyk.dto.LoginDTO.LoginResDTO" extends="BaseResultMap">
      <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, LOGIN_ID, LOGIN_PASSWORD, LOGIN_NAME, ROLEID, STATUS, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yyk.entity.SysLoginCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from login_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from login_table
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from login_table
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yyk.entity.SysLoginCriteria" >
    delete from login_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yyk.entity.SysLogin" >
    insert into login_table (ID, LOGIN_ID, LOGIN_PASSWORD, 
      LOGIN_NAME, ROLEID, STATUS, 
      CREATE_TIME, UPDATE_TIME)
    values (#{id,jdbcType=INTEGER}, #{loginId,jdbcType=VARCHAR}, #{loginPassword,jdbcType=VARCHAR}, 
      #{loginName,jdbcType=VARCHAR}, #{roleid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.yyk.entity.SysLogin" >
    insert into login_table
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="loginId != null" >
        LOGIN_ID,
      </if>
      <if test="loginPassword != null" >
        LOGIN_PASSWORD,
      </if>
      <if test="loginName != null" >
        LOGIN_NAME,
      </if>
      <if test="roleid != null" >
        ROLEID,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginId != null" >
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null" >
        #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yyk.entity.SysLoginCriteria" resultType="java.lang.Integer" >
    select count(*) from login_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update login_table
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loginId != null" >
        LOGIN_ID = #{record.loginId,jdbcType=VARCHAR},
      </if>
      <if test="record.loginPassword != null" >
        LOGIN_PASSWORD = #{record.loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.loginName != null" >
        LOGIN_NAME = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleid != null" >
        ROLEID = #{record.roleid,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update login_table
    set ID = #{record.id,jdbcType=INTEGER},
      LOGIN_ID = #{record.loginId,jdbcType=VARCHAR},
      LOGIN_PASSWORD = #{record.loginPassword,jdbcType=VARCHAR},
      LOGIN_NAME = #{record.loginName,jdbcType=VARCHAR},
      ROLEID = #{record.roleid,jdbcType=INTEGER},
      STATUS = #{record.status,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=DATE},
      UPDATE_TIME = #{record.updateTime,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yyk.entity.SysLogin" >
    update login_table
    <set >
      <if test="loginId != null" >
        LOGIN_ID = #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null" >
        LOGIN_PASSWORD = #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        ROLEID = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=DATE},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yyk.entity.SysLogin" >
    update login_table
    set LOGIN_ID = #{loginId,jdbcType=VARCHAR},
      LOGIN_PASSWORD = #{loginPassword,jdbcType=VARCHAR},
      LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      ROLEID = #{roleid,jdbcType=INTEGER},
      STATUS = #{status,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=DATE},
      UPDATE_TIME = #{updateTime,jdbcType=DATE}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  
  <select id="selectByExampleNew" resultMap="BaseResultMapNew" parameterType="com.yyk.entity.SysLoginCriteria" >
    select l.LOGIN_ID,l.LOGIN_PASSWORD,l.LOGIN_NAME ,b.data_name ROLE_NAME,l.ROLEID
    from(select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from login_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>)l
    left join base_code b on l.ROLEID=b.code and b.code_type='ROLEID' and b.status=1
  </select>
</mapper>