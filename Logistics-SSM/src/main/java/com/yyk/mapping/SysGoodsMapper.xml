<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yyk.dao.SysGoodsMapper" >
  <resultMap id="BaseResultMap" type="com.yyk.entity.SysGoods" >
    <id column="GOODS_ID" property="goodsId" jdbcType="VARCHAR" />
    <result column="ID" property="id" jdbcType="INTEGER" />
    <result column="ORDER_ID" property="orderId" jdbcType="VARCHAR" />
    <result column="GOODS_CODE" property="goodsCode" jdbcType="VARCHAR" />
    <result column="GOODS_NAME" property="goodsName" jdbcType="VARCHAR" />
    <result column="GOODS_TYPE" property="goodsType" jdbcType="VARCHAR" />
    <result column="GOODS_WEIGHT" property="goodsWeight" jdbcType="INTEGER" />
    <result column="GOODS_VOLUME" property="goodsVolume" jdbcType="INTEGER" />
    <result column="GOODS_NUM" property="goodsNum" jdbcType="INTEGER" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="DATE" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="DATE" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  
  
   <resultMap id="BaseResultMapNew" type="com.yyk.dto.GoodsDTO.GoodsResDTO"  extends="BaseResultMap">
    <result column="STATUS_NAME" property="statusName" jdbcType="VARCHAR" />
    <result column="GOODS_TYPE_NAME" property="goodsTypeName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    GOODS_ID, ID, ORDER_ID, GOODS_CODE, GOODS_NAME, GOODS_TYPE, GOODS_WEIGHT, GOODS_VOLUME, 
    GOODS_NUM, STATUS, CREATE_TIME, UPDATE_TIME, REMARK
  </sql>
  
  <sql id="Goods_Shelves_List" >
    GOODS_SHELVES_ID, ID, SHELVES_ID, GOODS_ID, GOODS_CODE, IN_TIME, OUT_TIME, STATUS, 
    CREATE_TIME, UPDATE_TIME, REMARK
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yyk.entity.SysGoodsCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from goods_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from goods_table
    where GOODS_ID = #{goodsId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from goods_table
    where GOODS_ID = #{goodsId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yyk.entity.SysGoodsCriteria" >
    delete from goods_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yyk.entity.SysGoods" >
    insert into goods_table (GOODS_ID, ID, ORDER_ID, 
      GOODS_CODE, GOODS_NAME, GOODS_TYPE, 
      GOODS_WEIGHT, GOODS_VOLUME, GOODS_NUM, 
      STATUS, CREATE_TIME, UPDATE_TIME, 
      REMARK)
    values (#{goodsId,jdbcType=VARCHAR}, #{id,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, 
      #{goodsCode,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, #{goodsType,jdbcType=VARCHAR}, 
      #{goodsWeight,jdbcType=INTEGER}, #{goodsVolume,jdbcType=INTEGER}, #{goodsNum,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yyk.entity.SysGoods" >
    insert into goods_table
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        GOODS_ID,
      </if>
      <if test="id != null" >
        ID,
      </if>
      <if test="orderId != null" >
        ORDER_ID,
      </if>
      <if test="goodsCode != null" >
        GOODS_CODE,
      </if>
      <if test="goodsName != null" >
        GOODS_NAME,
      </if>
      <if test="goodsType != null" >
        GOODS_TYPE,
      </if>
      <if test="goodsWeight != null" >
        GOODS_WEIGHT,
      </if>
      <if test="goodsVolume != null" >
        GOODS_VOLUME,
      </if>
      <if test="goodsNum != null" >
        GOODS_NUM,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="goodsCode != null" >
        #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsType != null" >
        #{goodsType,jdbcType=VARCHAR},
      </if>
      <if test="goodsWeight != null" >
        #{goodsWeight,jdbcType=INTEGER},
      </if>
      <if test="goodsVolume != null" >
        #{goodsVolume,jdbcType=INTEGER},
      </if>
      <if test="goodsNum != null" >
        #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yyk.entity.SysGoodsCriteria" resultType="java.lang.Integer" >
    select count(*) from goods_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods_table
    <set >
      <if test="record.goodsId != null" >
        GOODS_ID = #{record.goodsId,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsCode != null" >
        GOODS_CODE = #{record.goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsName != null" >
        GOODS_NAME = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsType != null" >
        GOODS_TYPE = #{record.goodsType,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsWeight != null" >
        GOODS_WEIGHT = #{record.goodsWeight,jdbcType=INTEGER},
      </if>
      <if test="record.goodsVolume != null" >
        GOODS_VOLUME = #{record.goodsVolume,jdbcType=INTEGER},
      </if>
      <if test="record.goodsNum != null" >
        GOODS_NUM = #{record.goodsNum,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods_table
    set GOODS_ID = #{record.goodsId,jdbcType=VARCHAR},
      ID = #{record.id,jdbcType=INTEGER},
      ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
      GOODS_CODE = #{record.goodsCode,jdbcType=VARCHAR},
      GOODS_NAME = #{record.goodsName,jdbcType=VARCHAR},
      GOODS_TYPE = #{record.goodsType,jdbcType=VARCHAR},
      GOODS_WEIGHT = #{record.goodsWeight,jdbcType=INTEGER},
      GOODS_VOLUME = #{record.goodsVolume,jdbcType=INTEGER},
      GOODS_NUM = #{record.goodsNum,jdbcType=INTEGER},
      STATUS = #{record.status,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=DATE},
      UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      REMARK = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yyk.entity.SysGoods" >
    update goods_table
    <set >
      <if test="id != null" >
        ID = #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        ORDER_ID = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="goodsCode != null" >
        GOODS_CODE = #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null" >
        GOODS_NAME = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsType != null" >
        GOODS_TYPE = #{goodsType,jdbcType=VARCHAR},
      </if>
      <if test="goodsWeight != null" >
        GOODS_WEIGHT = #{goodsWeight,jdbcType=INTEGER},
      </if>
      <if test="goodsVolume != null" >
        GOODS_VOLUME = #{goodsVolume,jdbcType=INTEGER},
      </if>
      <if test="goodsNum != null" >
        GOODS_NUM = #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where GOODS_ID = #{goodsId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yyk.entity.SysGoods" >
    update goods_table
    set ID = #{id,jdbcType=INTEGER},
      ORDER_ID = #{orderId,jdbcType=VARCHAR},
      GOODS_CODE = #{goodsCode,jdbcType=VARCHAR},
      GOODS_NAME = #{goodsName,jdbcType=VARCHAR},
      GOODS_TYPE = #{goodsType,jdbcType=VARCHAR},
      GOODS_WEIGHT = #{goodsWeight,jdbcType=INTEGER},
      GOODS_VOLUME = #{goodsVolume,jdbcType=INTEGER},
      GOODS_NUM = #{goodsNum,jdbcType=INTEGER},
      STATUS = #{status,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=DATE},
      UPDATE_TIME = #{updateTime,jdbcType=DATE},
      REMARK = #{remark,jdbcType=VARCHAR}
    where GOODS_ID = #{goodsId,jdbcType=VARCHAR}
  </update>
  
  <!-- 出库操作 -->
   <select id="selectOutGoods" resultMap="BaseResultMap" parameterType="java.lang.String" >
   select  g.ORDER_ID,g.GOODS_ID,g.GOODS_NAME,g.GOODS_CODE,b.DATA_NAME GOODS_TYPE
   from(
    select
    <include refid="Goods_Shelves_List" />
    from goods_shelves_table 
    where out_time is null
    <if test="shelvesId != null" >
      and shelves_id=#{shelvesId,jdbcType=VARCHAR}
    </if>
    )s
    inner JOIN goods_table g on g.GOODS_ID=s.GOODS_ID and g.`STATUS`='1'
    LEFT JOIN base_code b on g.GOODS_TYPE=b.`CODE`  and b.CODE_TYPE='GOODSTYPE' and b.`STATUS`='1' 
  </select>
  
   <select id="countOutGoods" parameterType="java.lang.String"  resultType="java.lang.Long" >
   select  count(distinct g.GOODS_ID)
   from(
     select
    <include refid="Goods_Shelves_List" />
    from goods_shelves_table 
    where `STATUS`='1'
    <if test="shelvesId != null" >
      and shelves_id=#{shelvesId,jdbcType=VARCHAR}
    </if>
    )s
	inner JOIN goods_table g on g.GOODS_ID=s.GOODS_ID and g.`STATUS`='1'
	LEFT JOIN base_code b on g.GOODS_TYPE=b.`CODE` and b.CODE_TYPE='GOODSTYPE' and b.`STATUS`='1' 
  </select>
  
  
  <!-- 入库操作 -->
   <select id="selectInGoods" resultMap="BaseResultMap" parameterType="java.util.List" >
   select  g.ORDER_ID,g.GOODS_ID,g.GOODS_NAME,g.GOODS_CODE,b.DATA_NAME GOODS_TYPE
   from goods_table  g
   LEFT JOIN base_code b on g.GOODS_TYPE=b.`CODE` and b.CODE_TYPE='GOODSTYPE' and g.`STATUS`='1'
   where b.`STATUS`='1' 
   <if test="list != null and  list.size()>0">
			and g.GOODS_ID not in
			 <foreach collection="list" index="index" item="item" open="(" separator="," close=")">  
					#{item,jdbcType=VARCHAR}
			</foreach>
	</if>
  
  </select>
  
   <select id="countInGoods" parameterType="java.util.List"  resultType="java.lang.Long" >
	  select count(g.GOODS_ID)
	 from goods_table  g
	 LEFT JOIN base_code b on g.GOODS_TYPE=b.`CODE` and b.CODE_TYPE='GOODSTYPE' and g.`STATUS`='1'
	 where b.`STATUS`='1'  
	 <if test="list != null and  list.size()>0">
				and g.GOODS_ID not in
		      <foreach collection="list" index="index" item="item" open="(" separator="," close=")">  
					#{item,jdbcType=VARCHAR}
			</foreach>
	</if> 
  </select>
  
  
   <select id="selectByExampleNew" resultMap="BaseResultMapNew" parameterType="com.yyk.entity.SysGoodsCriteria" >
   select t.GOODS_ID, t.ID, t.ORDER_ID, t.GOODS_CODE, t.GOODS_NAME, b.data_name GOODS_TYPE_NAME,t.GOODS_TYPE , t.GOODS_WEIGHT, t.GOODS_VOLUME, 
    t.GOODS_NUM, b1.data_name STATUS_NAME,t.STATUS, t.CREATE_TIME, t.UPDATE_TIME, t.REMARK from(
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from goods_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>) t
    left join base_code b on t.GOODS_TYPE=b.code and b.code_type='GOODSTYPE' and b.status=1
    left join base_code b1 on t.STATUS=b1.code and b1.code_type='GOODSSTATUS' and b1.status=1
  </select>
</mapper>